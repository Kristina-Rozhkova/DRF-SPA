version: "3.12"

services:
  web:
    build: .
    command: sh -c "python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/drf-spa
      - static_volume:/drf-spa/staticfiles
      - media_volume:/drf-spa/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - .env

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/drf-spa/staticfiles
    depends_on:
      - web

  db:
    image: postgres:16.0
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  celery:
    build: .
    command: celery -A DRF-SPA worker --loglevel=info
    volumes:
      - .:/drf-spa
    env_file:
      - .env
    depends_on:
      - db
      - redis

  celery_beat:
    build: .
    command: celery -A DRF-SPA beat --loglevel=info
    volumes:
      - .:/drf-spa
    env_file:
      - .env
    depends_on:
      - db
      - redis

networks:
  default:

volumes:
  postgres_data:
  static_volume:
  redis_data:
  media_volume: